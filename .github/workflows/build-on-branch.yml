name: Build on Branch

on:
  push:
    branches-ignore: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Run tests
        run: npm test

      - name: Build package
        run: npm run build

      - name: Check build output
        run: |
          echo "Build completed successfully!"
          echo "Built files:"
          ls -la dist/
          echo "Package size:"
          du -sh dist/

      - name: Comment on PR (if applicable)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('✅ Build Status')
            );

            const commentBody = `## ✅ Build Status

            **Branch**: \`${context.ref.replace('refs/heads/', '')}\`
            **Commit**: \`${context.sha.substring(0, 7)}\`
            **Status**: ✅ Build successful

            ### Build Details
            - ✅ Dependencies installed
            - ✅ Linting passed
            - ✅ Type checking passed
            - ✅ Tests passed
            - ✅ Package built successfully

            ### Next Steps
            - Review the changes
            - Ensure all tests pass
            - Merge when ready

            ---
            *This comment will be updated on each push to this branch.*`;

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            }
